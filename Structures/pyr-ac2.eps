%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 293 575 498
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D
%%For: 
%%Title: 
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
615 225 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
615.000 0.00000 l
615.000 225.000 l
0.00000 225.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
615.000 0.00000 l
615.000 225.000 l
0.00000 225.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
615.000 0.00000 l
615.000 225.000 l
0.00000 225.000 l
0.00000 0.00000 l
h
f
cliprestore
0 0 615 225 rc
q
0.00000 0.00000 0.00000 RG
newpath
164.086 84.1766 m
164.086 84.1766 l
211.627 111.624 l
212.006 111.843 212.136 112.328 211.917 112.706  c
211.698 113.085 211.214 113.215 210.835 112.996  c
210.835 112.996 l
163.294 85.5487 l
162.915 85.3299 162.785 84.8455 163.004 84.4666  c
163.223 84.0877 163.707 83.9579 164.086 84.1766  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
212.023 112.310 m
212.023 111.873 211.668 111.518 211.231 111.518  c
210.794 111.518 210.439 111.873 210.439 112.310  c
210.439 167.206 l
210.439 167.643 210.794 167.998 211.231 167.998  c
211.668 167.998 212.023 167.643 212.023 167.206  c
h
206.082 116.533 m
206.082 116.095 205.727 115.740 205.290 115.740  c
204.852 115.740 204.498 116.095 204.498 116.533  c
204.498 162.983 l
204.498 163.421 204.852 163.776 205.290 163.776  c
205.727 163.776 206.082 163.421 206.082 162.983  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
211.627 167.892 m
211.627 167.892 l
164.086 195.339 l
163.707 195.558 163.223 195.428 163.004 195.049  c
162.785 194.671 162.915 194.186 163.294 193.967  c
163.294 193.967 l
210.835 166.520 l
211.214 166.301 211.698 166.431 211.917 166.810  c
212.136 167.188 212.006 167.673 211.627 167.892  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
163.294 195.339 m
163.673 195.558 164.158 195.428 164.376 195.049  c
164.595 194.671 164.465 194.186 164.086 193.967  c
116.546 166.520 l
116.167 166.301 115.682 166.431 115.463 166.810  c
115.245 167.188 115.375 167.673 115.753 167.892  c
h
162.608 188.083 m
162.987 188.302 163.471 188.172 163.690 187.793  c
163.909 187.414 163.779 186.930 163.400 186.711  c
123.173 163.486 l
122.794 163.267 122.309 163.397 122.091 163.776  c
121.872 164.154 122.002 164.639 122.380 164.858  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
115.357 167.206 m
115.357 167.206 l
115.357 112.310 l
115.357 111.873 115.712 111.518 116.149 111.518  c
116.587 111.518 116.942 111.873 116.942 112.310  c
116.942 112.310 l
116.942 167.206 l
116.942 167.643 116.587 167.998 116.149 167.998  c
115.712 167.998 115.357 167.643 115.357 167.206  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
163.400 92.8049 m
163.779 92.5861 163.909 92.1017 163.690 91.7228  c
163.471 91.3439 162.987 91.2141 162.608 91.4329  c
122.380 114.658 l
122.002 114.877 121.872 115.362 122.091 115.740  c
122.309 116.119 122.794 116.249 123.173 116.030  c
h
164.086 85.5487 m
164.465 85.3299 164.595 84.8455 164.376 84.4666  c
164.158 84.0877 163.673 83.9579 163.294 84.1766  c
115.753 111.624 l
115.375 111.843 115.245 112.328 115.463 112.706  c
115.682 113.085 116.167 113.215 116.546 112.996  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
210.835 111.624 m
210.835 111.624 l
258.376 84.1766 l
258.755 83.9579 259.239 84.0877 259.458 84.4666  c
259.677 84.8455 259.547 85.3299 259.168 85.5487  c
259.168 85.5487 l
211.627 112.996 l
211.248 113.215 210.764 113.085 210.545 112.706  c
210.326 112.328 210.456 111.843 210.835 111.624  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
259.168 84.1766 m
259.168 84.1766 l
306.709 111.624 l
307.087 111.843 307.217 112.328 306.999 112.706  c
306.780 113.085 306.295 113.215 305.916 112.996  c
305.916 112.996 l
258.376 85.5487 l
257.997 85.3299 257.867 84.8455 258.086 84.4666  c
258.304 84.0877 258.789 83.9579 259.168 84.1766  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
306.602 104.368 m
306.224 104.587 306.094 105.071 306.313 105.450  c
306.531 105.829 307.016 105.959 307.395 105.740  c
347.622 82.5147 l
348.001 82.2959 348.131 81.8115 347.912 81.4326  c
347.693 81.0537 347.209 80.9239 346.830 81.1426  c
h
305.916 111.624 m
305.538 111.843 305.408 112.328 305.626 112.706  c
305.845 113.085 306.330 113.215 306.709 112.996  c
354.249 85.5487 l
354.628 85.3299 354.758 84.8455 354.539 84.4666  c
354.321 84.0877 353.836 83.9579 353.457 84.1766  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
354.249 84.1766 m
354.249 84.1766 l
401.790 111.624 l
402.169 111.843 402.299 112.328 402.080 112.706  c
401.861 113.085 401.377 113.215 400.998 112.996  c
400.998 112.996 l
353.457 85.5487 l
353.078 85.3299 352.948 84.8455 353.167 84.4666  c
353.386 84.0877 353.870 83.9579 354.249 84.1766  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
449.331 84.1766 m
448.952 83.9579 448.467 84.0877 448.249 84.4666  c
448.030 84.8455 448.160 85.3299 448.539 85.5487  c
496.079 112.996 l
496.458 113.215 496.943 113.085 497.162 112.706  c
497.380 112.328 497.250 111.843 496.872 111.624  c
h
450.017 91.4329 m
449.638 91.2141 449.154 91.3439 448.935 91.7228  c
448.716 92.1017 448.846 92.5861 449.225 92.8049  c
489.452 116.030 l
489.831 116.249 490.316 116.119 490.534 115.740  c
490.753 115.362 490.623 114.877 490.245 114.658  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
497.268 112.310 m
497.268 112.310 l
497.268 167.206 l
497.268 167.643 496.913 167.998 496.476 167.998  c
496.038 167.998 495.683 167.643 495.683 167.206  c
495.683 167.206 l
495.683 112.310 l
495.683 111.873 496.038 111.518 496.476 111.518  c
496.913 111.518 497.268 111.873 497.268 112.310  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
496.872 167.892 m
497.250 167.673 497.380 167.188 497.162 166.810  c
496.943 166.431 496.458 166.301 496.079 166.520  c
448.539 193.967 l
448.160 194.186 448.030 194.671 448.249 195.049  c
448.467 195.428 448.952 195.558 449.331 195.339  c
h
490.245 164.858 m
490.623 164.639 490.753 164.154 490.534 163.776  c
490.316 163.397 489.831 163.267 489.452 163.486  c
449.225 186.711 l
448.846 186.930 448.716 187.414 448.935 187.793  c
449.154 188.172 449.638 188.302 450.017 188.083  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
448.539 195.339 m
448.539 195.339 l
400.998 167.892 l
400.619 167.673 400.489 167.188 400.708 166.810  c
400.927 166.431 401.411 166.301 401.790 166.520  c
401.790 166.520 l
449.331 193.967 l
449.710 194.186 449.840 194.671 449.621 195.049  c
449.402 195.428 448.918 195.558 448.539 195.339  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
400.998 111.624 m
400.998 111.624 l
448.539 84.1766 l
448.918 83.9579 449.402 84.0877 449.621 84.4666  c
449.840 84.8455 449.710 85.3299 449.331 85.5487  c
449.331 85.5487 l
401.790 112.996 l
401.411 113.215 400.927 113.085 400.708 112.706  c
400.489 112.328 400.619 111.843 400.998 111.624  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
408.127 116.533 m
408.127 116.095 407.773 115.740 407.335 115.740  c
406.898 115.740 406.543 116.095 406.543 116.533  c
406.543 162.983 l
406.543 163.421 406.898 163.776 407.335 163.776  c
407.773 163.776 408.127 163.421 408.127 162.983  c
h
402.186 112.310 m
402.186 111.873 401.831 111.518 401.394 111.518  c
400.957 111.518 400.602 111.873 400.602 112.310  c
400.602 167.206 l
400.602 167.643 400.957 167.998 401.394 167.998  c
401.831 167.998 402.186 167.643 402.186 167.206  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
257.980 84.8627 m
257.980 85.3001 258.334 85.6548 258.772 85.6548  c
259.209 85.6548 259.564 85.3001 259.564 84.8627  c
259.564 42.0617 l
259.564 41.6242 259.209 41.2695 258.772 41.2695  c
258.334 41.2695 257.980 41.6242 257.980 42.0617  c
h
263.921 80.6405 m
263.921 81.0779 264.275 81.4326 264.713 81.4326  c
265.150 81.4326 265.505 81.0779 265.505 80.6405  c
265.505 42.0617 l
265.505 41.6242 265.150 41.2695 264.713 41.2695  c
264.275 41.2695 263.921 41.6242 263.921 42.0617  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
353.061 84.8627 m
353.061 84.8627 l
353.061 42.0617 l
353.061 41.6242 353.416 41.2695 353.853 41.2695  c
354.291 41.2695 354.645 41.6242 354.645 42.0617  c
354.645 42.0617 l
354.645 84.8627 l
354.645 85.3001 354.291 85.6548 353.853 85.6548  c
353.416 85.6548 353.061 85.3001 353.061 84.8627  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
267.604 29.1752 m
267.604 29.1752 l
345.021 29.1752 l
345.458 29.1752 345.813 29.5298 345.813 29.9673  c
345.813 30.4048 345.458 30.7595 345.021 30.7595  c
345.021 30.7595 l
267.604 30.7595 l
267.167 30.7595 266.812 30.4048 266.812 29.9673  c
266.812 29.5298 267.167 29.1752 267.604 29.1752  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
116.546 167.892 m
116.546 167.892 l
79.9627 189.013 l
79.5838 189.232 79.0993 189.102 78.8806 188.723  c
78.6619 188.344 78.7917 187.860 79.1705 187.641  c
79.1705 187.641 l
115.753 166.520 l
116.132 166.301 116.617 166.431 116.835 166.810  c
117.054 167.188 116.924 167.673 116.546 167.892  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
496.872 166.520 m
496.872 166.520 l
535.874 189.038 l
536.253 189.256 536.382 189.741 536.164 190.120  c
535.945 190.499 535.461 190.628 535.082 190.410  c
535.082 190.410 l
496.079 167.892 l
495.701 167.673 495.571 167.188 495.790 166.810  c
496.008 166.431 496.493 166.301 496.872 166.520  c
h
f
Q
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 251.608 16.4673 ] concat
newpath
12.5938 21.0000 m
10.6094 21.0000 l
3.34375 9.73438 l
3.26562 9.73438 l
3.29688 10.1719 3.32812 10.7240 3.35938 11.3906  c
3.40104 12.0469 3.42188 12.7240 3.42188 13.4219  c
3.42188 21.0000 l
1.84375 21.0000 l
1.84375 7.43750 l
3.81250 7.43750 l
11.0625 18.6562 l
11.1406 18.6562 l
11.1198 18.4583 11.0990 18.1562 11.0781 17.7500  c
11.0677 17.3438 11.0521 16.9010 11.0312 16.4219  c
11.0104 15.9427 11.0000 15.5000 11.0000 15.0938  c
11.0000 7.43750 l
12.5938 7.43750 l
12.5938 21.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 347.189 16.4673 ] concat
newpath
12.5938 21.0000 m
10.6094 21.0000 l
3.34375 9.73438 l
3.26562 9.73438 l
3.29688 10.1719 3.32812 10.7240 3.35938 11.3906  c
3.40104 12.0469 3.42188 12.7240 3.42188 13.4219  c
3.42188 21.0000 l
1.84375 21.0000 l
1.84375 7.43750 l
3.81250 7.43750 l
11.0625 18.6562 l
11.1406 18.6562 l
11.1198 18.4583 11.0990 18.1562 11.0781 17.7500  c
11.0677 17.3438 11.0521 16.9010 11.0312 16.4219  c
11.0104 15.9427 11.0000 15.5000 11.0000 15.0938  c
11.0000 7.43750 l
12.5938 7.43750 l
12.5938 21.0000 l
h
26.6588 21.0000 m
24.9400 21.0000 l
24.9400 14.6719 l
17.9869 14.6719 l
17.9869 21.0000 l
16.2838 21.0000 l
16.2838 7.43750 l
17.9869 7.43750 l
17.9869 13.1719 l
24.9400 13.1719 l
24.9400 7.43750 l
26.6588 7.43750 l
26.6588 21.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 20.2415 181.167 ] concat
newpath
12.2188 21.0000 m
10.5000 21.0000 l
10.5000 14.6719 l
3.54688 14.6719 l
3.54688 21.0000 l
1.84375 21.0000 l
1.84375 7.43750 l
3.54688 7.43750 l
3.54688 13.1719 l
10.5000 13.1719 l
10.5000 7.43750 l
12.2188 7.43750 l
12.2188 21.0000 l
h
27.7665 14.2031 m
27.7665 15.6094 27.5270 16.8333 27.0478 17.8750  c
26.5686 18.9167 25.8655 19.7292 24.9384 20.3125  c
24.0217 20.8958 22.8759 21.1875 21.5009 21.1875  c
20.0947 21.1875 18.9280 20.8958 18.0009 20.3125  c
17.0738 19.7292 16.3811 18.9115 15.9228 17.8594  c
15.4645 16.8073 15.2353 15.5781 15.2353 14.1719  c
15.2353 12.7865 15.4645 11.5729 15.9228 10.5312  c
16.3811 9.48958 17.0738 8.67708 18.0009 8.09375  c
18.9280 7.51042 20.1051 7.21875 21.5322 7.21875  c
22.8863 7.21875 24.0217 7.51042 24.9384 8.09375  c
25.8655 8.66667 26.5686 9.47917 27.0478 10.5312  c
27.5270 11.5729 27.7665 12.7969 27.7665 14.2031  c
h
17.0478 14.2031 m
17.0478 15.9115 17.4072 17.2552 18.1259 18.2344  c
18.8447 19.2135 19.9697 19.7031 21.5009 19.7031  c
23.0530 19.7031 24.1832 19.2135 24.8915 18.2344  c
25.5999 17.2552 25.9540 15.9115 25.9540 14.2031  c
25.9540 12.4948 25.5999 11.1562 24.8915 10.1875  c
24.1832 9.20833 23.0634 8.71875 21.5322 8.71875  c
20.0009 8.71875 18.8707 9.20833 18.1415 10.1875  c
17.4124 11.1562 17.0478 12.4948 17.0478 14.2031  c
h
42.6056 14.2031 m
42.6056 15.6094 42.3660 16.8333 41.8868 17.8750  c
41.4077 18.9167 40.7045 19.7292 39.7775 20.3125  c
38.8608 20.8958 37.7150 21.1875 36.3400 21.1875  c
34.9337 21.1875 33.7670 20.8958 32.8400 20.3125  c
31.9129 19.7292 31.2202 18.9115 30.7618 17.8594  c
30.3035 16.8073 30.0743 15.5781 30.0743 14.1719  c
30.0743 12.7865 30.3035 11.5729 30.7618 10.5312  c
31.2202 9.48958 31.9129 8.67708 32.8400 8.09375  c
33.7670 7.51042 34.9441 7.21875 36.3712 7.21875  c
37.7254 7.21875 38.8608 7.51042 39.7775 8.09375  c
40.7045 8.66667 41.4077 9.47917 41.8868 10.5312  c
42.3660 11.5729 42.6056 12.7969 42.6056 14.2031  c
h
31.8868 14.2031 m
31.8868 15.9115 32.2462 17.2552 32.9650 18.2344  c
33.6837 19.2135 34.8087 19.7031 36.3400 19.7031  c
37.8920 19.7031 39.0222 19.2135 39.7306 18.2344  c
40.4389 17.2552 40.7931 15.9115 40.7931 14.2031  c
40.7931 12.4948 40.4389 11.1562 39.7306 10.1875  c
39.0222 9.20833 37.9025 8.71875 36.3712 8.71875  c
34.8400 8.71875 33.7097 9.20833 32.9806 10.1875  c
32.2514 11.1562 31.8868 12.4948 31.8868 14.2031  c
h
51.4134 8.75000 m
49.9550 8.75000 48.8092 9.23958 47.9759 10.2188  c
47.1425 11.1875 46.7259 12.5208 46.7259 14.2188  c
46.7259 15.9062 47.1113 17.2396 47.8821 18.2188  c
48.6634 19.1979 49.8352 19.6875 51.3977 19.6875  c
51.9915 19.6875 52.5540 19.6406 53.0852 19.5469  c
53.6165 19.4427 54.1373 19.3125 54.6477 19.1562  c
54.6477 20.6406 l
54.1373 20.8281 53.6113 20.9635 53.0696 21.0469  c
52.5384 21.1406 51.8977 21.1875 51.1477 21.1875  c
49.7623 21.1875 48.6061 20.9062 47.6790 20.3438  c
46.7623 19.7708 46.0696 18.9583 45.6009 17.9062  c
45.1425 16.8542 44.9134 15.6198 44.9134 14.2031  c
44.9134 12.8281 45.1634 11.6198 45.6634 10.5781  c
46.1634 9.53646 46.9029 8.72396 47.8821 8.14062  c
48.8613 7.54688 50.0436 7.25000 51.4290 7.25000  c
52.8665 7.25000 54.1165 7.51562 55.1790 8.04688  c
54.4915 9.48438 l
54.0748 9.29688 53.6061 9.13021 53.0852 8.98438  c
52.5748 8.82812 52.0175 8.75000 51.4134 8.75000  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 539.118 181.167 ] concat
newpath
7.65625 8.75000 m
6.19792 8.75000 5.05208 9.23958 4.21875 10.2188  c
3.38542 11.1875 2.96875 12.5208 2.96875 14.2188  c
2.96875 15.9062 3.35417 17.2396 4.12500 18.2188  c
4.90625 19.1979 6.07812 19.6875 7.64062 19.6875  c
8.23438 19.6875 8.79688 19.6406 9.32812 19.5469  c
9.85938 19.4427 10.3802 19.3125 10.8906 19.1562  c
10.8906 20.6406 l
10.3802 20.8281 9.85417 20.9635 9.31250 21.0469  c
8.78125 21.1406 8.14062 21.1875 7.39062 21.1875  c
6.00521 21.1875 4.84896 20.9062 3.92188 20.3438  c
3.00521 19.7708 2.31250 18.9583 1.84375 17.9062  c
1.38542 16.8542 1.15625 15.6198 1.15625 14.2031  c
1.15625 12.8281 1.40625 11.6198 1.90625 10.5781  c
2.40625 9.53646 3.14583 8.72396 4.12500 8.14062  c
5.10417 7.54688 6.28646 7.25000 7.67188 7.25000  c
9.10938 7.25000 10.3594 7.51562 11.4219 8.04688  c
10.7344 9.48438 l
10.3177 9.29688 9.84896 9.13021 9.32812 8.98438  c
8.81771 8.82812 8.26042 8.75000 7.65625 8.75000  c
h
25.6955 14.2031 m
25.6955 15.6094 25.4560 16.8333 24.9768 17.8750  c
24.4976 18.9167 23.7945 19.7292 22.8674 20.3125  c
21.9507 20.8958 20.8049 21.1875 19.4299 21.1875  c
18.0237 21.1875 16.8570 20.8958 15.9299 20.3125  c
15.0028 19.7292 14.3101 18.9115 13.8518 17.8594  c
13.3935 16.8073 13.1643 15.5781 13.1643 14.1719  c
13.1643 12.7865 13.3935 11.5729 13.8518 10.5312  c
14.3101 9.48958 15.0028 8.67708 15.9299 8.09375  c
16.8570 7.51042 18.0341 7.21875 19.4612 7.21875  c
20.8153 7.21875 21.9507 7.51042 22.8674 8.09375  c
23.7945 8.66667 24.4976 9.47917 24.9768 10.5312  c
25.4560 11.5729 25.6955 12.7969 25.6955 14.2031  c
h
14.9768 14.2031 m
14.9768 15.9115 15.3362 17.2552 16.0549 18.2344  c
16.7737 19.2135 17.8987 19.7031 19.4299 19.7031  c
20.9820 19.7031 22.1122 19.2135 22.8205 18.2344  c
23.5289 17.2552 23.8830 15.9115 23.8830 14.2031  c
23.8830 12.4948 23.5289 11.1562 22.8205 10.1875  c
22.1122 9.20833 20.9924 8.71875 19.4612 8.71875  c
17.9299 8.71875 16.7997 9.20833 16.0705 10.1875  c
15.3414 11.1562 14.9768 12.4948 14.9768 14.2031  c
h
40.5346 14.2031 m
40.5346 15.6094 40.2950 16.8333 39.8158 17.8750  c
39.3367 18.9167 38.6335 19.7292 37.7065 20.3125  c
36.7898 20.8958 35.6440 21.1875 34.2690 21.1875  c
32.8627 21.1875 31.6960 20.8958 30.7690 20.3125  c
29.8419 19.7292 29.1492 18.9115 28.6908 17.8594  c
28.2325 16.8073 28.0033 15.5781 28.0033 14.1719  c
28.0033 12.7865 28.2325 11.5729 28.6908 10.5312  c
29.1492 9.48958 29.8419 8.67708 30.7690 8.09375  c
31.6960 7.51042 32.8731 7.21875 34.3002 7.21875  c
35.6544 7.21875 36.7898 7.51042 37.7065 8.09375  c
38.6335 8.66667 39.3367 9.47917 39.8158 10.5312  c
40.2950 11.5729 40.5346 12.7969 40.5346 14.2031  c
h
29.8158 14.2031 m
29.8158 15.9115 30.1752 17.2552 30.8940 18.2344  c
31.6127 19.2135 32.7377 19.7031 34.2690 19.7031  c
35.8210 19.7031 36.9512 19.2135 37.6596 18.2344  c
38.3679 17.2552 38.7221 15.9115 38.7221 14.2031  c
38.7221 12.4948 38.3679 11.1562 37.6596 10.1875  c
36.9512 9.20833 35.8315 8.71875 34.3002 8.71875  c
32.7690 8.71875 31.6387 9.20833 30.9096 10.1875  c
30.1804 11.1562 29.8158 12.4948 29.8158 14.2031  c
h
53.9049 21.0000 m
52.1861 21.0000 l
52.1861 14.6719 l
45.2330 14.6719 l
45.2330 21.0000 l
43.5299 21.0000 l
43.5299 7.43750 l
45.2330 7.43750 l
45.2330 13.1719 l
52.1861 13.1719 l
52.1861 7.43750 l
53.9049 7.43750 l
53.9049 21.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
cliprestore
newpath
0.00000 0.00000 m
0.00000 225.000 l
615.000 225.000 l
615.000 0.00000 l
h
W
cliprestore
newpath
0.00000 0.00000 m
0.00000 225.000 l
615.000 225.000 l
615.000 0.00000 l
h
W
Q

%%Trailer
%%EOF
