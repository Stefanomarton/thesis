%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 350 575 441
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D
%%For: 
%%Title: 
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
693 113 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
693.000 0.00000 l
693.000 113.000 l
0.00000 113.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
693.000 0.00000 l
693.000 113.000 l
0.00000 113.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
693.000 0.00000 l
693.000 113.000 l
0.00000 113.000 l
0.00000 0.00000 l
h
f
cliprestore
0 0 693 113 rc
q
0.00000 0.00000 0.00000 RG
newpath
89.8625 42.1581 m
89.6498 42.0353 89.3778 42.1081 89.2550 42.3208  c
89.1322 42.5335 89.2051 42.8055 89.4178 42.9283  c
113.387 56.7679 l
113.600 56.8907 113.872 56.8178 113.995 56.6052  c
114.118 56.3925 114.045 56.1205 113.832 55.9977  c
h
90.2475 45.8395 m
90.0348 45.7167 89.7629 45.7895 89.6401 46.0022  c
89.5173 46.2149 89.5901 46.4868 89.8028 46.6096  c
110.007 58.2750 l
110.219 58.3978 110.491 58.3250 110.614 58.1123  c
110.737 57.8996 110.664 57.6276 110.451 57.5048  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
89.8625 42.9283 m
89.8625 42.9283 l
65.8911 56.7679 l
65.6784 56.8907 65.4065 56.8178 65.2837 56.6051  c
65.1609 56.3925 65.2338 56.1205 65.4464 55.9977  c
65.4464 55.9977 l
89.4178 42.1581 l
89.6305 42.0353 89.9024 42.1081 90.0252 42.3208  c
90.1480 42.5335 90.0751 42.8055 89.8625 42.9283  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
114.054 56.3828 m
114.054 56.3828 l
114.054 84.0621 l
114.054 84.3077 113.855 84.5068 113.610 84.5068  c
113.364 84.5068 113.165 84.3077 113.165 84.0621  c
113.165 84.0621 l
113.165 56.3828 l
113.165 56.1372 113.364 55.9381 113.610 55.9381  c
113.855 55.9381 114.054 56.1372 114.054 56.3828  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
113.387 55.9977 m
113.387 55.9977 l
137.359 42.1581 l
137.571 42.0353 137.843 42.1081 137.966 42.3208  c
138.089 42.5335 138.016 42.8055 137.803 42.9283  c
137.803 42.9283 l
113.832 56.7679 l
113.619 56.8907 113.347 56.8178 113.225 56.6051  c
113.102 56.3925 113.175 56.1205 113.387 55.9977  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
113.832 84.4472 m
114.045 84.3244 114.118 84.0524 113.995 83.8398  c
113.872 83.6271 113.600 83.5542 113.387 83.6770  c
89.4178 97.5167 l
89.2051 97.6395 89.1322 97.9114 89.2550 98.1241  c
89.3778 98.3368 89.6498 98.4097 89.8625 98.2869  c
h
110.451 82.9401 m
110.664 82.8173 110.737 82.5453 110.614 82.3327  c
110.491 82.1200 110.219 82.0471 110.007 82.1699  c
89.8028 93.8353 l
89.5901 93.9581 89.5173 94.2300 89.6401 94.4427  c
89.7629 94.6554 90.0348 94.7283 90.2475 94.6055  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
89.4178 98.2869 m
89.4178 98.2869 l
65.4464 84.4472 l
65.2338 84.3244 65.1609 84.0525 65.2837 83.8398  c
65.4065 83.6271 65.6784 83.5542 65.8911 83.6770  c
65.8911 83.6770 l
89.8625 97.5167 l
90.0751 97.6395 90.1480 97.9114 90.0252 98.1241  c
89.9024 98.3368 89.6305 98.4097 89.4178 98.2869  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
65.2241 84.0621 m
65.2241 84.3077 65.4232 84.5068 65.6688 84.5068  c
65.9144 84.5068 66.1134 84.3077 66.1134 84.0621  c
66.1134 56.3828 l
66.1134 56.1372 65.9144 55.9381 65.6688 55.9381  c
65.4232 55.9381 65.2241 56.1372 65.2241 56.3828  c
h
68.2197 81.8879 m
68.2197 82.1335 68.4188 82.3326 68.6644 82.3326  c
68.9100 82.3326 69.1090 82.1335 69.1090 81.8879  c
69.1090 58.5570 l
69.1090 58.3114 68.9100 58.1123 68.6644 58.1123  c
68.4188 58.1123 68.2197 58.3114 68.2197 58.5570  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
65.8911 84.4472 m
65.8911 84.4472 l
47.7645 94.9124 l
47.5519 95.0352 47.2799 94.9623 47.1571 94.7497  c
47.0343 94.5370 47.1072 94.2650 47.3199 94.1422  c
47.3199 94.1422 l
65.4464 83.6770 l
65.6591 83.5542 65.9311 83.6271 66.0539 83.8398  c
66.1767 84.0525 66.1038 84.3244 65.8911 84.4472  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
137.803 42.1581 m
137.803 42.1581 l
161.775 55.9977 l
161.987 56.1205 162.060 56.3925 161.937 56.6051  c
161.815 56.8178 161.543 56.8907 161.330 56.7679  c
161.330 56.7679 l
137.359 42.9283 l
137.146 42.8055 137.073 42.5335 137.196 42.3208  c
137.319 42.1081 137.591 42.0353 137.803 42.1581  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
135.639 43.4079 m
135.639 43.6535 135.838 43.8526 136.083 43.8526  c
136.329 43.8526 136.528 43.6535 136.528 43.4079  c
136.528 21.5351 l
136.528 21.2895 136.329 21.0905 136.083 21.0905  c
135.838 21.0905 135.639 21.2895 135.639 21.5351  c
h
138.634 43.4079 m
138.634 43.6535 138.833 43.8526 139.079 43.8526  c
139.324 43.8526 139.524 43.6535 139.524 43.4079  c
139.524 21.5351 l
139.524 21.2895 139.324 21.0905 139.079 21.0905  c
138.833 21.0905 138.634 21.2895 138.634 21.5351  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
161.715 52.3163 m
161.502 52.4391 161.430 52.7111 161.552 52.9238  c
161.675 53.1365 161.947 53.2093 162.160 53.0865  c
182.363 41.4212 l
182.576 41.2984 182.649 41.0265 182.526 40.8138  c
182.403 40.6011 182.131 40.5283 181.919 40.6511  c
h
161.330 55.9977 m
161.117 56.1205 161.044 56.3925 161.167 56.6052  c
161.290 56.8178 161.562 56.8907 161.775 56.7679  c
185.744 42.9283 l
185.957 42.8055 186.030 42.5335 185.907 42.3208  c
185.784 42.1081 185.512 42.0353 185.300 42.1581  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
185.744 42.1581 m
185.744 42.1581 l
209.716 55.9995 l
209.928 56.1223 210.001 56.3943 209.878 56.6070  c
209.756 56.8196 209.484 56.8925 209.271 56.7697  c
209.271 56.7697 l
185.300 42.9282 l
185.087 42.8054 185.014 42.5335 185.137 42.3208  c
185.260 42.1081 185.532 42.0353 185.744 42.1581  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
209.271 55.9995 m
209.058 56.1223 208.985 56.3943 209.108 56.6069  c
209.231 56.8196 209.503 56.8925 209.716 56.7697  c
233.687 42.9301 l
233.900 42.8073 233.973 42.5353 233.850 42.3226  c
233.727 42.1099 233.455 42.0371 233.242 42.1599  c
h
212.652 57.5067 m
212.439 57.6295 212.366 57.9014 212.489 58.1141  c
212.612 58.3268 212.884 58.3997 213.096 58.2769  c
233.302 46.6114 l
233.515 46.4886 233.587 46.2167 233.465 46.0040  c
233.342 45.7913 233.070 45.7184 232.857 45.8412  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
209.938 56.3846 m
209.938 56.3846 l
209.938 84.0639 l
209.938 84.3095 209.739 84.5086 209.493 84.5086  c
209.248 84.5086 209.049 84.3095 209.049 84.0639  c
209.049 84.0639 l
209.049 56.3846 l
209.049 56.1390 209.248 55.9399 209.493 55.9399  c
209.739 55.9399 209.938 56.1390 209.938 56.3846  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
233.687 42.1599 m
233.687 42.1599 l
257.657 55.9995 l
257.869 56.1223 257.942 56.3943 257.819 56.6070  c
257.696 56.8196 257.425 56.8925 257.212 56.7697  c
257.212 56.7697 l
233.242 42.9301 l
233.030 42.8073 232.957 42.5353 233.080 42.3226  c
233.202 42.1099 233.474 42.0371 233.687 42.1599  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
257.879 56.3846 m
257.879 56.1390 257.680 55.9399 257.434 55.9399  c
257.189 55.9400 256.990 56.1391 256.990 56.3846  c
256.991 84.0621 l
256.991 84.3077 257.190 84.5068 257.436 84.5068  c
257.682 84.5068 257.881 84.3077 257.881 84.0621  c
h
254.883 58.5588 m
254.883 58.3132 254.684 58.1141 254.439 58.1141  c
254.193 58.1141 253.994 58.3132 253.994 58.5588  c
253.996 81.8881 l
253.996 82.1337 254.195 82.3328 254.440 82.3328  c
254.686 82.3328 254.885 82.1337 254.885 81.8881  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
257.658 84.4472 m
257.658 84.4472 l
233.687 98.2886 l
233.474 98.4115 233.202 98.3386 233.080 98.1259  c
232.957 97.9132 233.030 97.6413 233.242 97.5185  c
233.242 97.5185 l
257.214 83.6770 l
257.426 83.5542 257.698 83.6271 257.821 83.8398  c
257.944 84.0524 257.871 84.3244 257.658 84.4472  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
257.658 83.6770 m
257.658 83.6770 l
276.736 94.6916 l
276.949 94.8144 277.022 95.0864 276.899 95.2990  c
276.776 95.5117 276.505 95.5846 276.292 95.4618  c
276.292 95.4618 l
257.214 84.4472 l
257.001 84.3244 256.928 84.0525 257.051 83.8398  c
257.174 83.6271 257.446 83.5542 257.658 83.6770  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
233.242 98.2887 m
233.455 98.4115 233.727 98.3386 233.850 98.1259  c
233.973 97.9132 233.900 97.6413 233.687 97.5185  c
209.716 83.6788 l
209.503 83.5560 209.231 83.6289 209.108 83.8416  c
208.985 84.0543 209.058 84.3262 209.271 84.4490  c
h
232.857 94.6073 m
233.070 94.7301 233.342 94.6572 233.465 94.4445  c
233.587 94.2318 233.514 93.9599 233.302 93.8371  c
213.096 82.1716 l
212.884 82.0488 212.612 82.1217 212.489 82.3344  c
212.366 82.5471 212.439 82.8190 212.652 82.9418  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
626.866 83.6770 m
626.866 83.6770 l
645.944 94.6916 l
646.157 94.8144 646.230 95.0864 646.107 95.2990  c
645.984 95.5117 645.712 95.5846 645.500 95.4618  c
645.500 95.4618 l
626.421 84.4472 l
626.209 84.3244 626.136 84.0525 626.259 83.8398  c
626.381 83.6271 626.653 83.5542 626.866 83.6770  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
435.099 84.4472 m
435.099 84.4472 l
416.972 94.9124 l
416.760 95.0352 416.488 94.9623 416.365 94.7497  c
416.242 94.5370 416.315 94.2650 416.528 94.1422  c
416.528 94.1422 l
434.654 83.6770 l
434.867 83.5542 435.139 83.6271 435.262 83.8398  c
435.384 84.0525 435.312 84.3244 435.099 84.4472  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
602.450 98.2887 m
602.663 98.4115 602.935 98.3386 603.057 98.1259  c
603.180 97.9132 603.107 97.6413 602.895 97.5185  c
578.923 83.6788 l
578.711 83.5560 578.439 83.6289 578.316 83.8416  c
578.193 84.0543 578.266 84.3262 578.479 84.4490  c
h
602.065 94.6073 m
602.278 94.7301 602.549 94.6572 602.672 94.4445  c
602.795 94.2318 602.722 93.9599 602.510 93.8371  c
582.304 82.1716 l
582.091 82.0488 581.819 82.1217 581.697 82.3344  c
581.574 82.5471 581.647 82.8190 581.859 82.9418  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
579.146 56.3846 m
579.146 56.3846 l
579.146 84.0639 l
579.146 84.3095 578.947 84.5086 578.701 84.5086  c
578.455 84.5086 578.256 84.3095 578.256 84.0639  c
578.256 84.0639 l
578.256 56.3846 l
578.256 56.1390 578.455 55.9399 578.701 55.9399  c
578.947 55.9399 579.146 56.1390 579.146 56.3846  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
626.866 84.4472 m
626.866 84.4472 l
602.895 98.2886 l
602.682 98.4115 602.410 98.3386 602.287 98.1259  c
602.164 97.9132 602.237 97.6413 602.450 97.5185  c
602.450 97.5185 l
626.421 83.6770 l
626.634 83.5542 626.906 83.6271 627.029 83.8398  c
627.152 84.0524 627.079 84.3244 626.866 84.4472  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
627.087 56.3846 m
627.087 56.1390 626.887 55.9399 626.642 55.9399  c
626.396 55.9400 626.197 56.1391 626.197 56.3846  c
626.199 84.0621 l
626.199 84.3077 626.398 84.5068 626.644 84.5068  c
626.889 84.5068 627.088 84.3077 627.088 84.0621  c
h
624.091 58.5588 m
624.091 58.3132 623.892 58.1141 623.646 58.1141  c
623.401 58.1141 623.202 58.3132 623.202 58.5588  c
623.203 81.8881 l
623.203 82.1337 623.402 82.3328 623.648 82.3328  c
623.894 82.3328 624.093 82.1337 624.093 81.8881  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
602.895 42.1599 m
602.895 42.1599 l
626.864 55.9995 l
627.077 56.1223 627.150 56.3943 627.027 56.6070  c
626.904 56.8196 626.632 56.8925 626.420 56.7697  c
626.420 56.7697 l
602.450 42.9301 l
602.237 42.8073 602.164 42.5353 602.287 42.3226  c
602.410 42.1099 602.682 42.0371 602.895 42.1599  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
578.479 55.9995 m
578.266 56.1223 578.193 56.3943 578.316 56.6069  c
578.439 56.8196 578.711 56.8925 578.923 56.7697  c
602.895 42.9301 l
603.107 42.8073 603.180 42.5353 603.057 42.3226  c
602.935 42.1099 602.663 42.0371 602.450 42.1599  c
h
581.859 57.5067 m
581.647 57.6295 581.574 57.9014 581.697 58.1141  c
581.819 58.3268 582.091 58.3997 582.304 58.2769  c
602.510 46.6114 l
602.722 46.4886 602.795 46.2167 602.672 46.0040  c
602.550 45.7913 602.278 45.7184 602.065 45.8412  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
554.285 42.5431 m
554.285 42.5431 l
554.286 21.2031 l
554.286 20.9575 554.485 20.7584 554.731 20.7585  c
554.977 20.7585 555.176 20.9576 555.176 21.2032  c
555.176 21.2032 l
555.174 42.5432 l
555.174 42.7888 554.975 42.9879 554.730 42.9878  c
554.484 42.9878 554.285 42.7887 554.285 42.5431  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
550.109 15.3085 m
550.109 15.3085 l
511.411 15.3085 l
511.166 15.3085 510.967 15.1094 510.967 14.8639  c
510.967 14.6183 511.166 14.4192 511.411 14.4192  c
511.411 14.4192 l
550.109 14.4192 l
550.355 14.4192 550.554 14.6183 550.554 14.8639  c
550.554 15.1094 550.355 15.3085 550.109 15.3085  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
554.952 42.1581 m
554.952 42.1581 l
578.923 55.9995 l
579.136 56.1223 579.209 56.3943 579.086 56.6070  c
578.963 56.8196 578.691 56.8925 578.479 56.7697  c
578.479 56.7697 l
554.507 42.9282 l
554.295 42.8054 554.222 42.5335 554.345 42.3208  c
554.467 42.1081 554.739 42.0353 554.952 42.1581  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
506.344 42.5432 m
506.344 42.7887 506.543 42.9878 506.789 42.9878  c
507.034 42.9878 507.233 42.7887 507.233 42.5432  c
507.233 21.2031 l
507.233 20.9575 507.034 20.7584 506.789 20.7584  c
506.543 20.7584 506.344 20.9575 506.344 21.2031  c
h
509.340 40.3690 m
509.340 40.6146 509.539 40.8136 509.784 40.8136  c
510.030 40.8136 510.229 40.6146 510.229 40.3690  c
510.229 21.2031 l
510.229 20.9575 510.030 20.7584 509.784 20.7584  c
509.539 20.7584 509.340 20.9575 509.340 21.2031  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
530.923 52.3163 m
530.710 52.4391 530.637 52.7111 530.760 52.9238  c
530.883 53.1365 531.155 53.2093 531.367 53.0865  c
551.571 41.4211 l
551.784 41.2983 551.857 41.0263 551.734 40.8136  c
551.611 40.6010 551.339 40.5281 551.127 40.6509  c
h
530.538 55.9977 m
530.325 56.1205 530.252 56.3925 530.375 56.6052  c
530.498 56.8178 530.770 56.8907 530.982 56.7679  c
554.952 42.9283 l
555.165 42.8055 555.238 42.5335 555.115 42.3208  c
554.992 42.1081 554.720 42.0353 554.507 42.1581  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
507.011 42.1581 m
507.011 42.1581 l
530.982 55.9977 l
531.195 56.1205 531.268 56.3925 531.145 56.6051  c
531.022 56.8178 530.750 56.8907 530.538 56.7679  c
530.538 56.7679 l
506.566 42.9283 l
506.354 42.8055 506.281 42.5335 506.404 42.3208  c
506.526 42.1081 506.798 42.0353 507.011 42.1581  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
482.595 55.9977 m
482.595 55.9977 l
506.566 42.1581 l
506.779 42.0353 507.051 42.1081 507.174 42.3208  c
507.297 42.5335 507.224 42.8055 507.011 42.9283  c
507.011 42.9283 l
483.040 56.7679 l
482.827 56.8907 482.555 56.8178 482.432 56.6051  c
482.310 56.3925 482.382 56.1205 482.595 55.9977  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
434.432 84.0621 m
434.432 84.3077 434.631 84.5068 434.876 84.5068  c
435.122 84.5068 435.321 84.3077 435.321 84.0621  c
435.321 56.3828 l
435.321 56.1372 435.122 55.9381 434.876 55.9381  c
434.631 55.9381 434.432 56.1372 434.432 56.3828  c
h
437.427 81.8879 m
437.427 82.1335 437.627 82.3326 437.872 82.3326  c
438.118 82.3326 438.317 82.1335 438.317 81.8879  c
438.317 58.5570 l
438.317 58.3114 438.118 58.1123 437.872 58.1123  c
437.627 58.1123 437.427 58.3114 437.427 58.5570  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
459.070 42.9283 m
459.070 42.9283 l
435.099 56.7679 l
434.886 56.8907 434.614 56.8178 434.491 56.6051  c
434.369 56.3925 434.441 56.1205 434.654 55.9977  c
434.654 55.9977 l
458.626 42.1581 l
458.838 42.0353 459.110 42.1081 459.233 42.3208  c
459.356 42.5335 459.283 42.8055 459.070 42.9283  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
458.626 98.2869 m
458.626 98.2869 l
434.654 84.4472 l
434.441 84.3244 434.369 84.0525 434.491 83.8398  c
434.614 83.6271 434.886 83.5542 435.099 83.6770  c
435.099 83.6770 l
459.070 97.5167 l
459.283 97.6395 459.356 97.9114 459.233 98.1241  c
459.110 98.3368 458.838 98.4097 458.626 98.2869  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
483.040 84.4472 m
483.252 84.3244 483.325 84.0524 483.203 83.8398  c
483.080 83.6271 482.808 83.5542 482.595 83.6770  c
458.626 97.5167 l
458.413 97.6395 458.340 97.9114 458.463 98.1241  c
458.586 98.3368 458.858 98.4097 459.070 98.2869  c
h
479.659 82.9401 m
479.872 82.8173 479.945 82.5453 479.822 82.3327  c
479.699 82.1200 479.427 82.0471 479.214 82.1699  c
459.011 93.8353 l
458.798 93.9581 458.725 94.2300 458.848 94.4427  c
458.971 94.6554 459.243 94.7283 459.455 94.6055  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
483.262 56.3828 m
483.262 56.3828 l
483.262 84.0621 l
483.262 84.3077 483.063 84.5068 482.817 84.5068  c
482.572 84.5068 482.373 84.3077 482.373 84.0621  c
482.373 84.0621 l
482.373 56.3828 l
482.373 56.1372 482.572 55.9381 482.817 55.9381  c
483.063 55.9381 483.262 56.1372 483.262 56.3828  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
459.070 42.1581 m
458.858 42.0353 458.586 42.1081 458.463 42.3208  c
458.340 42.5335 458.413 42.8055 458.626 42.9283  c
482.595 56.7679 l
482.808 56.8907 483.080 56.8178 483.203 56.6052  c
483.325 56.3925 483.252 56.1205 483.040 55.9977  c
h
459.455 45.8395 m
459.243 45.7167 458.971 45.7895 458.848 46.0022  c
458.725 46.2149 458.798 46.4868 459.011 46.6096  c
479.214 58.2750 l
479.427 58.3978 479.699 58.3250 479.822 58.1123  c
479.945 57.8996 479.872 57.6276 479.659 57.5048  c
h
f
Q
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 134.058 8.86386 ] concat
newpath
3.50000 2.32812 m
1.62500 2.32812 .343750 3.71875 .343750 5.76562  c
.343750 7.82812 1.60938 9.20312 3.51562 9.20312  c
4.31250 9.20312 5.01562 8.96875 5.54688 8.51562  c
6.25000 7.90625 6.67188 6.89062 6.67188 5.82812  c
6.67188 3.70312 5.42188 2.32812 3.50000 2.32812  c
h
3.50000 3.06250 m
4.92188 3.06250 5.84375 4.14062 5.84375 5.81250  c
5.84375 7.39062 4.89062 8.46875 3.51562 8.46875  c
2.10938 8.46875 1.17188 7.39062 1.17188 5.76562  c
1.17188 4.15625 2.10938 3.06250 3.50000 3.06250  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 10.8849 91.9018 ] concat
newpath
4.21875 9.00000 m
6.06250 3.50000 l
6.06250 9.00000 l
6.84375 9.00000 l
6.84375 2.43750 l
5.68750 2.43750 l
3.78125 8.15625 l
1.84375 2.43750 l
.671875 2.43750 l
.671875 9.00000 l
1.46875 9.00000 l
1.46875 3.50000 l
3.32812 9.00000 l
4.21875 9.00000 l
h
12.1064 6.89062 m
12.1064 6.17188 12.0596 5.73438 11.9189 5.39062  c
11.6221 4.60938 10.9033 4.15625 10.0127 4.15625  c
8.70018 4.15625 7.85643 5.14062 7.85643 6.70312  c
7.85643 8.26562 8.66893 9.20312 9.99706 9.20312  c
11.0752 9.20312 11.8252 8.59375 12.0127 7.56250  c
11.2627 7.56250 l
11.0596 8.18750 10.6221 8.51562 10.0283 8.51562  c
9.54393 8.51562 9.13768 8.29688 8.88768 7.90625  c
8.71581 7.62500 8.65331 7.35938 8.63768 6.89062  c
12.1064 6.89062 l
h
8.65331 6.28125 m
8.71581 5.40625 9.24706 4.84375 10.0127 4.84375  c
10.7783 4.84375 11.3096 5.43750 11.3096 6.28125  c
8.65331 6.28125 l
h
16.0011 2.32812 m
14.1261 2.32812 12.8448 3.71875 12.8448 5.76562  c
12.8448 7.82812 14.1105 9.20312 16.0167 9.20312  c
16.8136 9.20312 17.5167 8.96875 18.0480 8.51562  c
18.7511 7.90625 19.1730 6.89062 19.1730 5.82812  c
19.1730 3.70312 17.9230 2.32812 16.0011 2.32812  c
h
16.0011 3.06250 m
17.4230 3.06250 18.3448 4.14062 18.3448 5.81250  c
18.3448 7.39062 17.3917 8.46875 16.0167 8.46875  c
14.6105 8.46875 13.6730 7.39062 13.6730 5.76562  c
13.6730 4.15625 14.6105 3.06250 16.0011 3.06250  c
h
23.0031 2.32812 m
21.1281 2.32812 19.8469 3.71875 19.8469 5.76562  c
19.8469 7.82812 21.1125 9.20312 23.0188 9.20312  c
23.8156 9.20312 24.5188 8.96875 25.0500 8.51562  c
25.7531 7.90625 26.1750 6.89062 26.1750 5.82812  c
26.1750 3.70312 24.9250 2.32812 23.0031 2.32812  c
h
23.0031 3.06250 m
24.4250 3.06250 25.3469 4.14062 25.3469 5.81250  c
25.3469 7.39062 24.3938 8.46875 23.0188 8.46875  c
21.6125 8.46875 20.6750 7.39062 20.6750 5.76562  c
20.6750 4.15625 21.6125 3.06250 23.0031 3.06250  c
h
32.4583 4.46875 m
32.2083 3.03125 31.3802 2.32812 29.9270 2.32812  c
29.0520 2.32812 28.3489 2.60938 27.8489 3.15625  c
27.2552 3.79688 26.9427 4.73438 26.9427 5.79688  c
26.9427 6.87500 27.2708 7.79688 27.8802 8.43750  c
28.3958 8.96875 29.0364 9.20312 29.8958 9.20312  c
31.5052 9.20312 32.3958 8.34375 32.5989 6.60938  c
31.7395 6.60938 l
31.6614 7.06250 31.5677 7.35938 31.4427 7.62500  c
31.1614 8.15625 30.6145 8.46875 29.9114 8.46875  c
28.5989 8.46875 27.7708 7.42188 27.7708 5.78125  c
27.7708 4.10938 28.5520 3.06250 29.8333 3.06250  c
30.3645 3.06250 30.8645 3.21875 31.1302 3.48438  c
31.3802 3.70312 31.5052 3.98438 31.6145 4.46875  c
32.4583 4.46875 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 279.267 91.9018 ] concat
newpath
5.95312 4.46875 m
5.70312 3.03125 4.87500 2.32812 3.42188 2.32812  c
2.54688 2.32812 1.84375 2.60938 1.34375 3.15625  c
.750000 3.79688 .437500 4.73438 .437500 5.79688  c
.437500 6.87500 .765625 7.79688 1.37500 8.43750  c
1.89062 8.96875 2.53125 9.20312 3.39062 9.20312  c
5.00000 9.20312 5.89062 8.34375 6.09375 6.60938  c
5.23438 6.60938 l
5.15625 7.06250 5.06250 7.35938 4.93750 7.62500  c
4.65625 8.15625 4.10938 8.46875 3.40625 8.46875  c
2.09375 8.46875 1.26562 7.42188 1.26562 5.78125  c
1.26562 4.10938 2.04688 3.06250 3.32812 3.06250  c
3.85938 3.06250 4.35938 3.21875 4.62500 3.48438  c
4.87500 3.70312 5.00000 3.98438 5.10938 4.46875  c
5.95312 4.46875 l
h
9.99805 2.32812 m
8.12305 2.32812 6.84180 3.71875 6.84180 5.76562  c
6.84180 7.82812 8.10742 9.20312 10.0137 9.20312  c
10.8105 9.20312 11.5137 8.96875 12.0449 8.51562  c
12.7480 7.90625 13.1699 6.89062 13.1699 5.82812  c
13.1699 3.70312 11.9199 2.32812 9.99805 2.32812  c
h
9.99805 3.06250 m
11.4199 3.06250 12.3418 4.14062 12.3418 5.81250  c
12.3418 7.39062 11.3887 8.46875 10.0137 8.46875  c
8.60742 8.46875 7.66992 7.39062 7.66992 5.76562  c
7.66992 4.15625 8.60742 3.06250 9.99805 3.06250  c
h
17.0001 2.32812 m
15.1251 2.32812 13.8438 3.71875 13.8438 5.76562  c
13.8438 7.82812 15.1095 9.20312 17.0157 9.20312  c
17.8126 9.20312 18.5157 8.96875 19.0470 8.51562  c
19.7501 7.90625 20.1720 6.89062 20.1720 5.82812  c
20.1720 3.70312 18.9220 2.32812 17.0001 2.32812  c
h
17.0001 3.06250 m
18.4220 3.06250 19.3438 4.14062 19.3438 5.81250  c
19.3438 7.39062 18.3907 8.46875 17.0157 8.46875  c
15.6095 8.46875 14.6720 7.39062 14.6720 5.76562  c
14.6720 4.15625 15.6095 3.06250 17.0001 3.06250  c
h
24.7209 9.00000 m
26.5646 3.50000 l
26.5646 9.00000 l
27.3459 9.00000 l
27.3459 2.43750 l
26.1896 2.43750 l
24.2834 8.15625 l
22.3459 2.43750 l
21.1740 2.43750 l
21.1740 9.00000 l
21.9709 9.00000 l
21.9709 3.50000 l
23.8303 9.00000 l
24.7209 9.00000 l
h
32.6086 6.89062 m
32.6086 6.17188 32.5617 5.73438 32.4211 5.39062  c
32.1242 4.60938 31.4054 4.15625 30.5148 4.15625  c
29.2023 4.15625 28.3586 5.14062 28.3586 6.70312  c
28.3586 8.26562 29.1711 9.20312 30.4992 9.20312  c
31.5773 9.20312 32.3273 8.59375 32.5148 7.56250  c
31.7648 7.56250 l
31.5617 8.18750 31.1242 8.51562 30.5304 8.51562  c
30.0461 8.51562 29.6398 8.29688 29.3898 7.90625  c
29.2179 7.62500 29.1554 7.35938 29.1398 6.89062  c
32.6086 6.89062 l
h
29.1554 6.28125 m
29.2179 5.40625 29.7492 4.84375 30.5148 4.84375  c
31.2804 4.84375 31.8117 5.43750 31.8117 6.28125  c
29.1554 6.28125 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 648.474 91.9018 ] concat
newpath
5.95312 4.46875 m
5.70312 3.03125 4.87500 2.32812 3.42188 2.32812  c
2.54688 2.32812 1.84375 2.60938 1.34375 3.15625  c
.750000 3.79688 .437500 4.73438 .437500 5.79688  c
.437500 6.87500 .765625 7.79688 1.37500 8.43750  c
1.89062 8.96875 2.53125 9.20312 3.39062 9.20312  c
5.00000 9.20312 5.89062 8.34375 6.09375 6.60938  c
5.23438 6.60938 l
5.15625 7.06250 5.06250 7.35938 4.93750 7.62500  c
4.65625 8.15625 4.10938 8.46875 3.40625 8.46875  c
2.09375 8.46875 1.26562 7.42188 1.26562 5.78125  c
1.26562 4.10938 2.04688 3.06250 3.32812 3.06250  c
3.85938 3.06250 4.35938 3.21875 4.62500 3.48438  c
4.87500 3.70312 5.00000 3.98438 5.10938 4.46875  c
5.95312 4.46875 l
h
9.99805 2.32812 m
8.12305 2.32812 6.84180 3.71875 6.84180 5.76562  c
6.84180 7.82812 8.10742 9.20312 10.0137 9.20312  c
10.8105 9.20312 11.5137 8.96875 12.0449 8.51562  c
12.7480 7.90625 13.1699 6.89062 13.1699 5.82812  c
13.1699 3.70312 11.9199 2.32812 9.99805 2.32812  c
h
9.99805 3.06250 m
11.4199 3.06250 12.3418 4.14062 12.3418 5.81250  c
12.3418 7.39062 11.3887 8.46875 10.0137 8.46875  c
8.60742 8.46875 7.66992 7.39062 7.66992 5.76562  c
7.66992 4.15625 8.60742 3.06250 9.99805 3.06250  c
h
17.0001 2.32812 m
15.1251 2.32812 13.8438 3.71875 13.8438 5.76562  c
13.8438 7.82812 15.1095 9.20312 17.0157 9.20312  c
17.8126 9.20312 18.5157 8.96875 19.0470 8.51562  c
19.7501 7.90625 20.1720 6.89062 20.1720 5.82812  c
20.1720 3.70312 18.9220 2.32812 17.0001 2.32812  c
h
17.0001 3.06250 m
18.4220 3.06250 19.3438 4.14062 19.3438 5.81250  c
19.3438 7.39062 18.3907 8.46875 17.0157 8.46875  c
15.6095 8.46875 14.6720 7.39062 14.6720 5.76562  c
14.6720 4.15625 15.6095 3.06250 17.0001 3.06250  c
h
24.7209 9.00000 m
26.5646 3.50000 l
26.5646 9.00000 l
27.3459 9.00000 l
27.3459 2.43750 l
26.1896 2.43750 l
24.2834 8.15625 l
22.3459 2.43750 l
21.1740 2.43750 l
21.1740 9.00000 l
21.9709 9.00000 l
21.9709 3.50000 l
23.8303 9.00000 l
24.7209 9.00000 l
h
32.6086 6.89062 m
32.6086 6.17188 32.5617 5.73438 32.4211 5.39062  c
32.1242 4.60938 31.4054 4.15625 30.5148 4.15625  c
29.2023 4.15625 28.3586 5.14062 28.3586 6.70312  c
28.3586 8.26562 29.1711 9.20312 30.4992 9.20312  c
31.5773 9.20312 32.3273 8.59375 32.5148 7.56250  c
31.7648 7.56250 l
31.5617 8.18750 31.1242 8.51562 30.5304 8.51562  c
30.0461 8.51562 29.6398 8.29688 29.3898 7.90625  c
29.2179 7.62500 29.1554 7.35938 29.1398 6.89062  c
32.6086 6.89062 l
h
29.1554 6.28125 m
29.2179 5.40625 29.7492 4.84375 30.5148 4.84375  c
31.2804 4.84375 31.8117 5.43750 31.8117 6.28125  c
29.1554 6.28125 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 380.093 91.9018 ] concat
newpath
4.21875 9.00000 m
6.06250 3.50000 l
6.06250 9.00000 l
6.84375 9.00000 l
6.84375 2.43750 l
5.68750 2.43750 l
3.78125 8.15625 l
1.84375 2.43750 l
.671875 2.43750 l
.671875 9.00000 l
1.46875 9.00000 l
1.46875 3.50000 l
3.32812 9.00000 l
4.21875 9.00000 l
h
12.1064 6.89062 m
12.1064 6.17188 12.0596 5.73438 11.9189 5.39062  c
11.6221 4.60938 10.9033 4.15625 10.0127 4.15625  c
8.70018 4.15625 7.85643 5.14062 7.85643 6.70312  c
7.85643 8.26562 8.66893 9.20312 9.99706 9.20312  c
11.0752 9.20312 11.8252 8.59375 12.0127 7.56250  c
11.2627 7.56250 l
11.0596 8.18750 10.6221 8.51562 10.0283 8.51562  c
9.54393 8.51562 9.13768 8.29688 8.88768 7.90625  c
8.71581 7.62500 8.65331 7.35938 8.63768 6.89062  c
12.1064 6.89062 l
h
8.65331 6.28125 m
8.71581 5.40625 9.24706 4.84375 10.0127 4.84375  c
10.7783 4.84375 11.3096 5.43750 11.3096 6.28125  c
8.65331 6.28125 l
h
16.0011 2.32812 m
14.1261 2.32812 12.8448 3.71875 12.8448 5.76562  c
12.8448 7.82812 14.1105 9.20312 16.0167 9.20312  c
16.8136 9.20312 17.5167 8.96875 18.0480 8.51562  c
18.7511 7.90625 19.1730 6.89062 19.1730 5.82812  c
19.1730 3.70312 17.9230 2.32812 16.0011 2.32812  c
h
16.0011 3.06250 m
17.4230 3.06250 18.3448 4.14062 18.3448 5.81250  c
18.3448 7.39062 17.3917 8.46875 16.0167 8.46875  c
14.6105 8.46875 13.6730 7.39062 13.6730 5.76562  c
13.6730 4.15625 14.6105 3.06250 16.0011 3.06250  c
h
23.0031 2.32812 m
21.1281 2.32812 19.8469 3.71875 19.8469 5.76562  c
19.8469 7.82812 21.1125 9.20312 23.0188 9.20312  c
23.8156 9.20312 24.5188 8.96875 25.0500 8.51562  c
25.7531 7.90625 26.1750 6.89062 26.1750 5.82812  c
26.1750 3.70312 24.9250 2.32812 23.0031 2.32812  c
h
23.0031 3.06250 m
24.4250 3.06250 25.3469 4.14062 25.3469 5.81250  c
25.3469 7.39062 24.3938 8.46875 23.0188 8.46875  c
21.6125 8.46875 20.6750 7.39062 20.6750 5.76562  c
20.6750 4.15625 21.6125 3.06250 23.0031 3.06250  c
h
32.4583 4.46875 m
32.2083 3.03125 31.3802 2.32812 29.9270 2.32812  c
29.0520 2.32812 28.3489 2.60938 27.8489 3.15625  c
27.2552 3.79688 26.9427 4.73438 26.9427 5.79688  c
26.9427 6.87500 27.2708 7.79688 27.8802 8.43750  c
28.3958 8.96875 29.0364 9.20312 29.8958 9.20312  c
31.5052 9.20312 32.3958 8.34375 32.5989 6.60938  c
31.7395 6.60938 l
31.6614 7.06250 31.5677 7.35938 31.4427 7.62500  c
31.1614 8.15625 30.6145 8.46875 29.9114 8.46875  c
28.5989 8.46875 27.7708 7.42188 27.7708 5.78125  c
27.7708 4.10938 28.5520 3.06250 29.8333 3.06250  c
30.3645 3.06250 30.8645 3.21875 31.1302 3.48438  c
31.3802 3.70312 31.5052 3.98438 31.6145 4.46875  c
32.4583 4.46875 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 551.388 8.86386 ] concat
newpath
5.81250 2.43750 m
5.01562 2.43750 l
5.01562 7.79688 l
1.59375 2.43750 l
.687500 2.43750 l
.687500 9.00000 l
1.46875 9.00000 l
1.46875 3.68750 l
4.87500 9.00000 l
5.81250 9.00000 l
5.81250 2.43750 l
h
11.4512 6.01562 m
11.4512 9.00000 l
12.2949 9.00000 l
12.2949 2.43750 l
11.4512 2.43750 l
11.4512 5.28125 l
8.07617 5.28125 l
8.07617 2.43750 l
7.24805 2.43750 l
7.24805 9.00000 l
8.07617 9.00000 l
8.07617 6.01562 l
11.4512 6.01562 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 503.445 8.86386 ] concat
newpath
5.81250 2.43750 m
5.01562 2.43750 l
5.01562 7.79688 l
1.59375 2.43750 l
.687500 2.43750 l
.687500 9.00000 l
1.46875 9.00000 l
1.46875 3.68750 l
4.87500 9.00000 l
5.81250 9.00000 l
5.81250 2.43750 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
cliprestore
newpath
0.00000 0.00000 m
0.00000 113.000 l
693.000 113.000 l
693.000 0.00000 l
h
W
cliprestore
newpath
0.00000 0.00000 m
0.00000 113.000 l
693.000 113.000 l
693.000 0.00000 l
h
W
Q
q
newpath
363.381 55.8213 m
319.945 55.8213 l
319.945 56.9446 l
363.381 56.9446 l
363.381 59.6407 l
372.368 56.3830 l
363.381 53.1253 l
h
f
.470588 .470588 .470588 RG
newpath
f
Q

%%Trailer
%%EOF
