%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 205 575 586
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D
%%For: 
%%Title: 
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
127 87 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
127.000 0.00000 l
127.000 87.0000 l
0.00000 87.0000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
127.000 0.00000 l
127.000 87.0000 l
0.00000 87.0000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
127.000 0.00000 l
127.000 87.0000 l
0.00000 87.0000 l
0.00000 0.00000 l
h
f
cliprestore
0 0 127 87 rc
q
0.00000 0.00000 0.00000 RG
newpath
39.8991 58.7993 m
39.8991 58.7993 l
22.4641 68.5472 l
22.2501 68.6668 21.9797 68.5903 21.8601 68.3764  c
21.7404 68.1624 21.8169 67.8920 22.0309 67.7724  c
22.0309 67.7724 l
39.4659 58.0245 l
39.6799 57.9049 39.9503 57.9814 40.0699 58.1954  c
40.1895 58.4093 40.1130 58.6797 39.8991 58.7993  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
63.5394 72.6380 m
63.7519 72.7602 64.0232 72.6870 64.1453 72.4745  c
64.2675 72.2619 64.1943 71.9906 63.9817 71.8685  c
39.9037 58.0272 l
39.6912 57.9050 39.4199 57.9782 39.2977 58.1907  c
39.1755 58.4033 39.2488 58.6746 39.4613 58.7967  c
h
63.1749 69.0087 m
63.3874 69.1309 63.6587 69.0577 63.7809 68.8451  c
63.9030 68.6326 63.8298 68.3613 63.6173 68.2392  c
62.0781 67.3544 l
61.8656 67.2322 61.5943 67.3055 61.4721 67.5180  c
61.3500 67.7305 61.4232 68.0018 61.6357 68.1240  c
h
58.5574 66.3544 m
58.7699 66.4765 59.0412 66.4033 59.1634 66.1908  c
59.2856 65.9783 59.2123 65.7070 58.9998 65.5848  c
57.4607 64.7000 l
57.2482 64.5779 56.9768 64.6511 56.8547 64.8636  c
56.7325 65.0761 56.8058 65.3474 57.0183 65.4696  c
h
53.9400 63.7000 m
54.1525 63.8222 54.4238 63.7489 54.5460 63.5364  c
54.6681 63.3239 54.5949 63.0526 54.3824 62.9305  c
52.8432 62.0457 l
52.6307 61.9235 52.3594 61.9967 52.2372 62.2093  c
52.1151 62.4218 52.1883 62.6931 52.4008 62.8152  c
h
49.3225 61.0457 m
49.5350 61.1678 49.8063 61.0946 49.9285 60.8821  c
50.0507 60.6696 49.9774 60.3983 49.7649 60.2761  c
48.2257 59.3913 l
48.0132 59.2692 47.7419 59.3424 47.6198 59.5549  c
47.4976 59.7674 47.5708 60.0387 47.7834 60.1609  c
h
44.7050 58.3913 m
44.9176 58.5135 45.1889 58.4402 45.3110 58.2277  c
45.4332 58.0152 45.3600 57.7439 45.1474 57.6217  c
43.6083 56.7370 l
43.3958 56.6148 43.1245 56.6880 43.0023 56.9006  c
42.8801 57.1131 42.9534 57.3844 43.1659 57.5065  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
88.2291 58.3187 m
88.2291 58.3187 l
105.014 68.3209 l
105.225 68.4464 105.294 68.7188 105.168 68.9294  c
105.043 69.1399 104.770 69.2089 104.560 69.0834  c
104.560 69.0834 l
87.7747 59.0813 l
87.5642 58.9558 87.4952 58.6834 87.6207 58.4728  c
87.7461 58.2622 88.0186 58.1933 88.2291 58.3187  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
88.2185 59.0874 m
88.4325 58.9678 88.5090 58.6974 88.3893 58.4834  c
88.2697 58.2695 87.9993 58.1930 87.7853 58.3126  c
63.5440 71.8659 l
63.3300 71.9855 63.2535 72.2559 63.3732 72.4698  c
63.4928 72.6838 63.7632 72.7603 63.9771 72.6407  c
h
84.8902 57.5515 m
85.1042 57.4319 85.1806 57.1615 85.0610 56.9475  c
84.9414 56.7336 84.6710 56.6571 84.4570 56.7767  c
82.9074 57.6431 l
82.6935 57.7627 82.6170 58.0331 82.7366 58.2471  c
82.8562 58.4610 83.1267 58.5375 83.3406 58.4179  c
h
80.2414 60.1506 m
80.4554 60.0310 80.5318 59.7606 80.4122 59.5466  c
80.2926 59.3327 80.0222 59.2562 79.8082 59.3758  c
78.2586 60.2422 l
78.0447 60.3618 77.9682 60.6322 78.0878 60.8462  c
78.2075 61.0601 78.4779 61.1366 78.6918 61.0170  c
h
75.5926 62.7497 m
75.8066 62.6301 75.8831 62.3597 75.7634 62.1457  c
75.6438 61.9318 75.3734 61.8553 75.1595 61.9749  c
73.6099 62.8413 l
73.3959 62.9609 73.3194 63.2313 73.4391 63.4453  c
73.5587 63.6593 73.8291 63.7357 74.0430 63.6161  c
h
70.9439 65.3488 m
71.1578 65.2292 71.2343 64.9588 71.1147 64.7449  c
70.9950 64.5309 70.7246 64.4544 70.5107 64.5740  c
68.9611 65.4404 l
68.7471 65.5600 68.6707 65.8305 68.7903 66.0444  c
68.9099 66.2584 69.1803 66.3348 69.3943 66.2152  c
h
66.2951 67.9480 m
66.5090 67.8283 66.5855 67.5579 66.4659 67.3440  c
66.3463 67.1300 66.0759 67.0535 65.8619 67.1732  c
64.3123 68.0395 l
64.0983 68.1591 64.0219 68.4296 64.1415 68.6435  c
64.2611 68.8575 64.5315 68.9339 64.7455 68.8143  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
39.2387 58.4093 m
39.2372 58.6544 39.4347 58.8543 39.6798 58.8558  c
39.9250 58.8572 40.1249 58.6597 40.1263 58.4146  c
40.2537 37.0441 l
40.2552 36.7990 40.0577 36.5991 39.8125 36.5976  c
39.5674 36.5962 39.3675 36.7937 39.3661 37.0388  c
h
42.2164 56.2559 m
42.2149 56.5010 42.4124 56.7009 42.6576 56.7024  c
42.9027 56.7038 43.1026 56.5063 43.1040 56.2612  c
43.1146 54.4859 l
43.1161 54.2408 42.9186 54.0409 42.6734 54.0394  c
42.4283 54.0380 42.2284 54.2355 42.2270 54.4806  c
h
42.2481 50.9300 m
42.2467 51.1751 42.4442 51.3750 42.6893 51.3765  c
42.9344 51.3779 43.1343 51.1804 43.1358 50.9353  c
43.1464 49.1600 l
43.1478 48.9148 42.9503 48.7149 42.7052 48.7135  c
42.4601 48.7120 42.2602 48.9095 42.2587 49.1547  c
h
42.2799 45.6040 m
42.2784 45.8492 42.4759 46.0491 42.7211 46.0505  c
42.9662 46.0520 43.1661 45.8545 43.1675 45.6093  c
43.1781 43.8340 l
43.1796 43.5889 42.9821 43.3890 42.7369 43.3876  c
42.4918 43.3861 42.2919 43.5836 42.2905 43.8287  c
h
42.3116 40.2781 m
42.3102 40.5232 42.5077 40.7231 42.7528 40.7246  c
42.9979 40.7261 43.1978 40.5285 43.1993 40.2834  c
43.2099 38.5081 l
43.2113 38.2630 43.0138 38.0631 42.7687 38.0616  c
42.5236 38.0602 42.3237 38.2577 42.3222 38.5028  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
84.6233 56.4976 m
84.6200 56.7427 84.8159 56.9441 85.0610 56.9475  c
85.3061 56.9509 85.5075 56.7550 85.5109 56.5099  c
85.5354 54.7347 l
85.5388 54.4896 85.3429 54.2881 85.0978 54.2848  c
84.8527 54.2814 84.6512 54.4773 84.6478 54.7224  c
h
84.6968 51.1721 m
84.6934 51.4172 84.8894 51.6186 85.1345 51.6220  c
85.3796 51.6254 85.5810 51.4294 85.5844 51.1843  c
85.6089 49.4092 l
85.6123 49.1641 85.4163 48.9626 85.1712 48.9592  c
84.9261 48.9559 84.7247 49.1518 84.7213 49.3969  c
h
84.7703 45.8466 m
84.7669 46.0917 84.9629 46.2931 85.2080 46.2965  c
85.4531 46.2999 85.6545 46.1039 85.6579 45.8588  c
85.6824 44.0837 l
85.6858 43.8386 85.4898 43.6371 85.2447 43.6337  c
84.9996 43.6304 84.7982 43.8263 84.7948 44.0714  c
h
84.8438 40.5211 m
84.8404 40.7662 85.0364 40.9676 85.2815 40.9710  c
85.5266 40.9744 85.7280 40.7784 85.7314 40.5333  c
85.7559 38.7581 l
85.7593 38.5130 85.5633 38.3116 85.3182 38.3082  c
85.0731 38.3048 84.8717 38.5008 84.8683 38.7459  c
h
87.5581 58.6939 m
87.5548 58.9390 87.7507 59.1404 87.9958 59.1438  c
88.2409 59.1472 88.4423 58.9512 88.4457 58.7061  c
88.7406 37.3411 l
88.7440 37.0960 88.5480 36.8946 88.3029 36.8912  c
88.0578 36.8878 87.8564 37.0838 87.8530 37.3289  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
71.1081 18.1267 m
70.9102 17.9820 70.6325 18.0251 70.4878 18.2229  c
70.3431 18.4208 70.3862 18.6985 70.5841 18.8432  c
83.4867 28.2790 l
83.6846 28.4237 83.9623 28.3806 84.1070 28.1827  c
84.2517 27.9849 84.2086 27.7072 84.0107 27.5625  c
h
69.3579 20.5198 m
69.1601 20.3751 68.8824 20.4182 68.7377 20.6161  c
68.5930 20.8140 68.6361 21.0916 68.8339 21.2363  c
70.2670 22.2843 l
70.4648 22.4290 70.7425 22.3859 70.8872 22.1881  c
71.0319 21.9902 70.9888 21.7125 70.7910 21.5678  c
h
73.6570 23.6638 m
73.4592 23.5191 73.1815 23.5622 73.0368 23.7600  c
72.8921 23.9579 72.9352 24.2356 73.1330 24.3803  c
74.5660 25.4283 l
74.7639 25.5730 75.0416 25.5299 75.1863 25.3320  c
75.3310 25.1342 75.2879 24.8565 75.0900 24.7118  c
h
77.9561 26.8077 m
77.7582 26.6630 77.4805 26.7061 77.3358 26.9040  c
77.1911 27.1019 77.2342 27.3796 77.4321 27.5242  c
78.8651 28.5722 l
79.0630 28.7169 79.3407 28.6738 79.4854 28.4760  c
79.6301 28.2781 79.5870 28.0004 79.3891 27.8557  c
h
82.2552 29.9517 m
82.0573 29.8070 81.7796 29.8501 81.6349 30.0479  c
81.4902 30.2458 81.5333 30.5235 81.7312 30.6682  c
81.7366 30.6722 l
81.9345 30.8169 82.2122 30.7738 82.3568 30.5759  c
82.5015 30.3780 82.4584 30.1003 82.2606 29.9556  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
44.4969 27.3825 m
44.2930 27.5185 44.2379 27.7940 44.3739 27.9980  c
44.5099 28.2019 44.7854 28.2570 44.9894 28.1210  c
59.2115 18.6373 l
59.4155 18.5013 59.4706 18.2257 59.3346 18.0218  c
59.1986 17.8178 58.9230 17.7627 58.7191 17.8987  c
h
46.1418 29.8492 m
45.9378 29.9852 45.8827 30.2607 46.0187 30.4647  c
46.1547 30.6686 46.4303 30.7237 46.6342 30.5877  c
48.1113 29.6028 l
48.3152 29.4668 48.3703 29.1912 48.2343 28.9873  c
48.0983 28.7833 47.8228 28.7282 47.6188 28.8642  c
h
50.5729 26.8943 m
50.3690 27.0303 50.3139 27.3059 50.4499 27.5098  c
50.5859 27.7138 50.8615 27.7689 51.0654 27.6329  c
52.5425 26.6479 l
52.7464 26.5119 52.8015 26.2364 52.6655 26.0324  c
52.5295 25.8285 52.2540 25.7734 52.0500 25.9094  c
h
55.0041 23.9395 m
54.8002 24.0755 54.7451 24.3511 54.8811 24.5550  c
55.0171 24.7589 55.2927 24.8140 55.4966 24.6780  c
56.9737 23.6931 l
57.1776 23.5571 57.2327 23.2815 57.0967 23.0776  c
56.9607 22.8736 56.6851 22.8186 56.4812 22.9545  c
h
59.4353 20.9847 m
59.2314 21.1206 59.1763 21.3962 59.3123 21.6002  c
59.4483 21.8041 59.7239 21.8592 59.9278 21.7232  c
60.8564 21.1040 l
61.0603 20.9680 61.1154 20.6924 60.9794 20.4885  c
60.8434 20.2845 60.5679 20.2294 60.3639 20.3654  c
h
f
Q
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 84.6768 25.8076 ] concat
newpath
1.28125 6.04688 m
1.28125 6.99479 1.43750 7.68229 1.75000 8.10938  c
2.07292 8.52604 2.57292 8.73438 3.25000 8.73438  c
3.91667 8.73438 4.41146 8.52604 4.73438 8.10938  c
5.05729 7.68229 5.21875 6.99479 5.21875 6.04688  c
5.21875 5.10938 5.05729 4.43229 4.73438 4.01562  c
4.42188 3.59896 3.92708 3.39062 3.25000 3.39062  c
2.57292 3.39062 2.07292 3.59896 1.75000 4.01562  c
1.43750 4.43229 1.28125 5.10938 1.28125 6.04688  c
h
.375000 6.04688 m
.375000 4.04688 1.33333 3.04688 3.25000 3.04688  c
4.19792 3.04688 4.91146 3.30208 5.39062 3.81250  c
5.88021 4.31250 6.12500 5.05729 6.12500 6.04688  c
6.12500 7.04688 5.88021 7.80729 5.39062 8.32812  c
4.90104 8.83854 4.18750 9.09375 3.25000 9.09375  c
2.31250 9.09375 1.59896 8.83854 1.10938 8.32812  c
.619792 7.80729 .375000 7.04688 .375000 6.04688  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 36.1427 25.5174 ] concat
newpath
1.28125 6.04688 m
1.28125 6.99479 1.43750 7.68229 1.75000 8.10938  c
2.07292 8.52604 2.57292 8.73438 3.25000 8.73438  c
3.91667 8.73438 4.41146 8.52604 4.73438 8.10938  c
5.05729 7.68229 5.21875 6.99479 5.21875 6.04688  c
5.21875 5.10938 5.05729 4.43229 4.73438 4.01562  c
4.42188 3.59896 3.92708 3.39062 3.25000 3.39062  c
2.57292 3.39062 2.07292 3.59896 1.75000 4.01562  c
1.43750 4.43229 1.28125 5.10938 1.28125 6.04688  c
h
.375000 6.04688 m
.375000 4.04688 1.33333 3.04688 3.25000 3.04688  c
4.19792 3.04688 4.91146 3.30208 5.39062 3.81250  c
5.88021 4.31250 6.12500 5.05729 6.12500 6.04688  c
6.12500 7.04688 5.88021 7.80729 5.39062 8.32812  c
4.90104 8.83854 4.18750 9.09375 3.25000 9.09375  c
2.31250 9.09375 1.59896 8.83854 1.10938 8.32812  c
.619792 7.80729 .375000 7.04688 .375000 6.04688  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 105.950 67.2236 ] concat
newpath
1.85938 6.42188 m
1.85938 8.64062 l
2.75000 8.76562 l
2.75000 9.00000 l
.312500 9.00000 l
.312500 8.76562 l
1.01562 8.64062 l
1.01562 3.45312 l
.265625 3.34375 l
.265625 3.10938 l
2.79688 3.10938 l
3.53646 3.10938 4.08333 3.23438 4.43750 3.48438  c
4.79167 3.73438 4.96875 4.13542 4.96875 4.68750  c
4.96875 5.07292 4.85938 5.41146 4.64062 5.70312  c
4.43229 5.98438 4.13542 6.18229 3.75000 6.29688  c
5.35938 8.64062 l
5.98438 8.76562 l
5.98438 9.00000 l
4.57812 9.00000 l
2.92188 6.42188 l
1.85938 6.42188 l
h
4.09375 4.73438 m
4.09375 4.28646 3.98438 3.96875 3.76562 3.78125  c
3.54688 3.59375 3.16146 3.50000 2.60938 3.50000  c
1.85938 3.50000 l
1.85938 6.01562 l
2.64062 6.01562 l
3.16146 6.01562 3.53125 5.92188 3.75000 5.73438  c
3.97917 5.53646 4.09375 5.20312 4.09375 4.73438  c
h
10.0029 9.00000 m
6.39355 9.00000 l
6.39355 8.35938 l
7.22168 7.60938 l
7.74251 7.15104 8.12272 6.78125 8.36230 6.50000  c
8.61230 6.20833 8.78939 5.91146 8.89355 5.60938  c
9.00814 5.30729 9.06543 4.96354 9.06543 4.57812  c
9.06543 4.19271 8.97689 3.90104 8.79980 3.70312  c
8.63314 3.50521 8.35189 3.40625 7.95605 3.40625  c
7.79980 3.40625 7.63835 3.42708 7.47168 3.46875  c
7.30501 3.51042 7.15918 3.56771 7.03418 3.64062  c
6.89355 4.35938 l
6.59668 4.35938 l
6.59668 3.23438 l
7.12793 3.10938 7.58105 3.04688 7.95605 3.04688  c
8.60189 3.04688 9.08626 3.18229 9.40918 3.45312  c
9.73210 3.71354 9.89355 4.08854 9.89355 4.57812  c
9.89355 4.91146 9.82585 5.22396 9.69043 5.51562  c
9.56543 5.80729 9.37272 6.09896 9.11230 6.39062  c
8.85189 6.67188 8.41439 7.07292 7.79980 7.59375  c
7.53939 7.81250 7.26335 8.05729 6.97168 8.32812  c
10.0029 8.32812 l
10.0029 9.00000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 9.87861 66.4652 ] concat
newpath
1.85938 6.42188 m
1.85938 8.64062 l
2.75000 8.76562 l
2.75000 9.00000 l
.312500 9.00000 l
.312500 8.76562 l
1.01562 8.64062 l
1.01562 3.45312 l
.265625 3.34375 l
.265625 3.10938 l
2.79688 3.10938 l
3.53646 3.10938 4.08333 3.23438 4.43750 3.48438  c
4.79167 3.73438 4.96875 4.13542 4.96875 4.68750  c
4.96875 5.07292 4.85938 5.41146 4.64062 5.70312  c
4.43229 5.98438 4.13542 6.18229 3.75000 6.29688  c
5.35938 8.64062 l
5.98438 8.76562 l
5.98438 9.00000 l
4.57812 9.00000 l
2.92188 6.42188 l
1.85938 6.42188 l
h
4.09375 4.73438 m
4.09375 4.28646 3.98438 3.96875 3.76562 3.78125  c
3.54688 3.59375 3.16146 3.50000 2.60938 3.50000  c
1.85938 3.50000 l
1.85938 6.01562 l
2.64062 6.01562 l
3.16146 6.01562 3.53125 5.92188 3.75000 5.73438  c
3.97917 5.53646 4.09375 5.20312 4.09375 4.73438  c
h
8.75293 8.64062 m
9.95605 8.76562 l
9.95605 9.00000 l
6.79980 9.00000 l
6.79980 8.76562 l
8.00293 8.64062 l
8.00293 3.84375 l
6.81543 4.26562 l
6.81543 4.03125 l
8.53418 3.06250 l
8.75293 3.06250 l
8.75293 8.64062 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 61.1175 8.72756 ] concat
newpath
3.17188 9.00000 m
3.01562 9.00000 l
2.00000 3.93750 l
1.17188 8.64062 l
1.93750 8.76562 l
1.90625 9.00000 l
-.109375 9.00000 l
-.0625000 8.76562 l
.703125 8.64062 l
1.62500 3.45312 l
.890625 3.34375 l
.937500 3.10938 l
2.60938 3.10938 l
3.51562 7.60938 l
6.14062 3.10938 l
7.90625 3.10938 l
7.85938 3.34375 l
7.09375 3.45312 l
6.17188 8.64062 l
6.90625 8.76562 l
6.87500 9.00000 l
4.48438 9.00000 l
4.51562 8.76562 l
5.32812 8.64062 l
6.15625 3.93750 l
3.17188 9.00000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
cliprestore
newpath
0.00000 0.00000 m
0.00000 87.0000 l
127.000 87.0000 l
127.000 0.00000 l
h
W
cliprestore
newpath
0.00000 0.00000 m
0.00000 87.0000 l
127.000 87.0000 l
127.000 0.00000 l
h
W
Q

%%Trailer
%%EOF
